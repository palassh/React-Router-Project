{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palsahu\\\\ReactTutorial\\\\Router-Practice-Project\\\\src\\\\pages\\\\QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { useParams, Route } from \"react-router-dom\";\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const DUMMY_QUOTES = [{\n    id: 1,\n    author: 'Palash',\n    text: 'My First Quote'\n  }, {\n    id: 2,\n    author: 'Sahu',\n    text: 'My Second Quote'\n  }];\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["React","Fragment","useParams","Route","Comments","HighlightedQuote","QuoteDetail","params","DUMMY_QUOTES","id","author","text","quote","find","quoteId"],"sources":["C:/Users/palsahu/ReactTutorial/Router-Practice-Project/src/pages/QuoteDetails.js"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { useParams, Route } from \"react-router-dom\";\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\r\n\r\nconst QuoteDetail = () => {\r\n    const params = useParams();\r\n\r\n    const DUMMY_QUOTES = [\r\n        {id: 1, author: 'Palash', text: 'My First Quote'},\r\n        {id: 2, author: 'Sahu', text: 'My Second Quote'}\r\n    ]\r\n\r\n    const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId)\r\n\r\n    if(!quote){\r\n        return <p>No Quote Found!!</p>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={quote.text} author={quote.author}/>\r\n            <Route path={`/quotes/${params.quoteId}/comments`}>\r\n                <Comments/>\r\n            </Route>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default QuoteDetail;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;EAEA,MAAMM,YAAY,GAAG,CACjB;IAACC,EAAE,EAAE,CAAL;IAAQC,MAAM,EAAE,QAAhB;IAA0BC,IAAI,EAAE;EAAhC,CADiB,EAEjB;IAACF,EAAE,EAAE,CAAL;IAAQC,MAAM,EAAE,MAAhB;IAAwBC,IAAI,EAAE;EAA9B,CAFiB,CAArB;EAKA,MAAMC,KAAK,GAAGJ,YAAY,CAACK,IAAb,CAAkBD,KAAK,IAAIA,KAAK,CAACH,EAAN,KAAaF,MAAM,CAACO,OAA/C,CAAd;;EAEA,IAAG,CAACF,KAAJ,EAAU;IACN,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACI,QAAC,QAAD;IAAA,wBACI,QAAC,gBAAD;MAAkB,IAAI,EAAEA,KAAK,CAACD,IAA9B;MAAoC,MAAM,EAAEC,KAAK,CAACF;IAAlD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,KAAD;MAAO,IAAI,EAAG,WAAUH,MAAM,CAACO,OAAQ,WAAvC;MAAA,uBACI,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CAtBD;;GAAMR,W;UACaJ,S;;;KADbI,W;AAwBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}